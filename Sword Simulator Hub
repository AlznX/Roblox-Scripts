-- Enhanced Sword Simulator Hub v3.0.0
-- Completely rewritten with modern practices and improved UI

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Configuration
local CONFIG = {
    THEME = {
        PRIMARY = Color3.fromRGB(45, 45, 45),
        SECONDARY = Color3.fromRGB(35, 35, 35),
        ACCENT = Color3.fromRGB(0, 162, 255),
        TEXT_PRIMARY = Color3.fromRGB(255, 255, 255),
        TEXT_SECONDARY = Color3.fromRGB(200, 200, 200),
        SUCCESS = Color3.fromRGB(76, 175, 80),
        WARNING = Color3.fromRGB(255, 152, 0),
        ERROR = Color3.fromRGB(244, 67, 54)
    },
    ANIMATIONS = {
        SPEED = 0.3,
        EASING = Enum.EasingStyle.Quad,
        DIRECTION = Enum.EasingDirection.Out
    }
}

-- Utility Functions
local Utils = {}

function Utils.CreateTween(object, properties, duration)
    duration = duration or CONFIG.ANIMATIONS.SPEED
    local tweenInfo = TweenInfo.new(duration, CONFIG.ANIMATIONS.EASING, CONFIG.ANIMATIONS.DIRECTION)
    return TweenService:Create(object, tweenInfo, properties)
end

function Utils.CreateRoundedFrame(parent, size, position, color)
    local frame = Instance.new("Frame")
    frame.Parent = parent
    frame.Size = size
    frame.Position = position
    frame.BackgroundColor3 = color
    frame.BorderSizePixel = 0
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame
    
    return frame
end

function Utils.CreateButton(parent, text, size, position, callback)
    local button = Instance.new("TextButton")
    button.Parent = parent
    button.Size = size
    button.Position = position
    button.BackgroundColor3 = CONFIG.THEME.ACCENT
    button.BorderSizePixel = 0
    button.Text = text
    button.TextColor3 = CONFIG.THEME.TEXT_PRIMARY
    button.TextScaled = true
    button.Font = Enum.Font.GothamBold
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button
    
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 8)
    padding.PaddingRight = UDim.new(0, 8)
    padding.PaddingTop = UDim.new(0, 4)
    padding.PaddingBottom = UDim.new(0, 4)
    padding.Parent = button
    
    -- Hover effects
    button.MouseEnter:Connect(function()
        Utils.CreateTween(button, {BackgroundColor3 = CONFIG.THEME.ACCENT:lerp(Color3.fromRGB(255, 255, 255), 0.1)}):Play()
    end)
    
    button.MouseLeave:Connect(function()
        Utils.CreateTween(button, {BackgroundColor3 = CONFIG.THEME.ACCENT}):Play()
    end)
    
    if callback then
        button.MouseButton1Click:Connect(callback)
    end
    
    return button
end

function Utils.ShowNotification(message, type)
    type = type or "info"
    local colors = {
        info = CONFIG.THEME.ACCENT,
        success = CONFIG.THEME.SUCCESS,
        warning = CONFIG.THEME.WARNING,
        error = CONFIG.THEME.ERROR
    }
    
    local notification = Utils.CreateRoundedFrame(playerGui, UDim2.new(0, 300, 0, 60), UDim2.new(0.5, -150, 0, -70), colors[type])
    notification.ZIndex = 1000
    
    local text = Instance.new("TextLabel")
    text.Parent = notification
    text.Size = UDim2.new(1, -16, 1, -16)
    text.Position = UDim2.new(0, 8, 0, 8)
    text.BackgroundTransparency = 1
    text.Text = message
    text.TextColor3 = CONFIG.THEME.TEXT_PRIMARY
    text.TextScaled = true
    text.Font = Enum.Font.Gotham
    
    -- Animate in
    Utils.CreateTween(notification, {Position = UDim2.new(0.5, -150, 0, 20)}, 0.5):Play()
    
    -- Animate out after 3 seconds
    task.wait(3)
    Utils.CreateTween(notification, {Position = UDim2.new(0.5, -150, 0, -70)}, 0.5):Play()
    task.wait(0.5)
    notification:Destroy()
end

-- Loading Screen
local function CreateLoadingScreen()
    local loadingGui = Instance.new("ScreenGui")
    loadingGui.Name = "LoadingScreen"
    loadingGui.Parent = playerGui
    loadingGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    local background = Instance.new("Frame")
    background.Parent = loadingGui
    background.Size = UDim2.new(1, 0, 1, 0)
    background.BackgroundColor3 = CONFIG.THEME.PRIMARY
    background.BorderSizePixel = 0
    
    local loadingFrame = Utils.CreateRoundedFrame(background, UDim2.new(0, 400, 0, 200), UDim2.new(0.5, -200, 0.5, -100), CONFIG.THEME.SECONDARY)
    
    local title = Instance.new("TextLabel")
    title.Parent = loadingFrame
    title.Size = UDim2.new(1, -32, 0, 50)
    title.Position = UDim2.new(0, 16, 0, 20)
    title.BackgroundTransparency = 1
    title.Text = "Sword Simulator Hub"
    title.TextColor3 = CONFIG.THEME.TEXT_PRIMARY
    title.TextScaled = true
    title.Font = Enum.Font.GothamBold
    
    local subtitle = Instance.new("TextLabel")
    subtitle.Parent = loadingFrame
    subtitle.Size = UDim2.new(1, -32, 0, 30)
    subtitle.Position = UDim2.new(0, 16, 0, 70)
    subtitle.BackgroundTransparency = 1
    subtitle.Text = "Version 3.0.0 - Loading..."
    subtitle.TextColor3 = CONFIG.THEME.TEXT_SECONDARY
    subtitle.TextScaled = true
    subtitle.Font = Enum.Font.Gotham
    
    local progressBar = Utils.CreateRoundedFrame(loadingFrame, UDim2.new(1, -32, 0, 8), UDim2.new(0, 16, 0, 120), CONFIG.THEME.PRIMARY)
    
    local progressFill = Utils.CreateRoundedFrame(progressBar, UDim2.new(0, 0, 1, 0), UDim2.new(0, 0, 0, 0), CONFIG.THEME.ACCENT)
    
    local loadingText = Instance.new("TextLabel")
    loadingText.Parent = loadingFrame
    loadingText.Size = UDim2.new(1, -32, 0, 30)
    loadingText.Position = UDim2.new(0, 16, 0, 140)
    loadingText.BackgroundTransparency = 1
    loadingText.Text = "Initializing..."
    loadingText.TextColor3 = CONFIG.THEME.TEXT_SECONDARY
    loadingText.TextScaled = true
    loadingText.Font = Enum.Font.Gotham
    
    -- Simulate loading process
    local loadingSteps = {
        {text = "Initializing scripts...", progress = 0.2},
        {text = "Setting up UI components...", progress = 0.4},
        {text = "Loading sword utilities...", progress = 0.6},
        {text = "Connecting to services...", progress = 0.8},
        {text = "Finalizing setup...", progress = 1.0}
    }
    
    for i, step in ipairs(loadingSteps) do
        loadingText.Text = step.text
        Utils.CreateTween(progressFill, {Size = UDim2.new(step.progress, 0, 1, 0)}, 0.5):Play()
        task.wait(0.8)
    end
    
    loadingText.Text = "Complete!"
    task.wait(0.5)
    
    Utils.CreateTween(loadingFrame, {Position = UDim2.new(0.5, -200, 0.5, -300)}, 0.5):Play()
    Utils.CreateTween(background, {BackgroundTransparency = 1}, 0.5):Play()
    
    task.wait(0.5)
    loadingGui:Destroy()
end

-- Main Hub Creation
local function CreateMainHub()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SwordSimulatorHub"
    screenGui.Parent = playerGui
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.ResetOnSpawn = false
    
    -- Main Frame
    local mainFrame = Utils.CreateRoundedFrame(screenGui, UDim2.new(0, 800, 0, 600), UDim2.new(0.5, -400, 0.5, -300), CONFIG.THEME.PRIMARY)
    mainFrame.Active = true
    mainFrame.Draggable = true
    
    -- Title Bar
    local titleBar = Utils.CreateRoundedFrame(mainFrame, UDim2.new(1, 0, 0, 50), UDim2.new(0, 0, 0, 0), CONFIG.THEME.SECONDARY)
    
    local titleText = Instance.new("TextLabel")
    titleText.Parent = titleBar
    titleText.Size = UDim2.new(1, -100, 1, 0)
    titleText.Position = UDim2.new(0, 16, 0, 0)
    titleText.BackgroundTransparency = 1
    titleText.Text = "Sword Simulator Hub v3.0.0"
    titleText.TextColor3 = CONFIG.THEME.TEXT_PRIMARY
    titleText.TextScaled = true
    titleText.Font = Enum.Font.GothamBold
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Close Button
    local closeButton = Utils.CreateButton(titleBar, "âœ•", UDim2.new(0, 40, 0, 30), UDim2.new(1, -50, 0, 10), function()
        screenGui:Destroy()
    end)
    closeButton.BackgroundColor3 = CONFIG.THEME.ERROR
    
    -- Content Area
    local contentFrame = Utils.CreateRoundedFrame(mainFrame, UDim2.new(1, -20, 1, -80), UDim2.new(0, 10, 0, 60), CONFIG.THEME.SECONDARY)
    
    -- Tabs
    local tabFrame = Utils.CreateRoundedFrame(contentFrame, UDim2.new(1, -20, 0, 50), UDim2.new(0, 10, 0, 10), CONFIG.THEME.PRIMARY)
    
    local tabs = {"Scripts", "Sword Tools", "Utilities", "Settings"}
    local tabButtons = {}
    local tabContent = {}
    
    for i, tabName in ipairs(tabs) do
        local tabButton = Utils.CreateButton(tabFrame, tabName, UDim2.new(0.25, -5, 1, -10), UDim2.new((i-1) * 0.25, 2.5, 0, 5), function()
            -- Switch tabs
            for j, btn in ipairs(tabButtons) do
                if j == i then
                    btn.BackgroundColor3 = CONFIG.THEME.ACCENT
                    tabContent[j].Visible = true
                else
                    btn.BackgroundColor3 = CONFIG.THEME.PRIMARY
                    tabContent[j].Visible = false
                end
            end
        end)
        tabButton.BackgroundColor3 = i == 1 and CONFIG.THEME.ACCENT or CONFIG.THEME.PRIMARY
        tabButtons[i] = tabButton
        
        -- Tab content
        local content = Utils.CreateRoundedFrame(contentFrame, UDim2.new(1, -20, 1, -80), UDim2.new(0, 10, 0, 70), CONFIG.THEME.SECONDARY)
        content.Visible = i == 1
        tabContent[i] = content
        
        -- Add scroll frame
        local scrollFrame = Instance.new("ScrollingFrame")
        scrollFrame.Parent = content
        scrollFrame.Size = UDim2.new(1, -20, 1, -20)
        scrollFrame.Position = UDim2.new(0, 10, 0, 10)
        scrollFrame.BackgroundTransparency = 1
        scrollFrame.BorderSizePixel = 0
        scrollFrame.ScrollBarThickness = 8
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
        
        local listLayout = Instance.new("UIListLayout")
        listLayout.Parent = scrollFrame
        listLayout.Padding = UDim.new(0, 10)
        listLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
        -- Update canvas size when content changes
        listLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            scrollFrame.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y + 20)
        end)
        
        -- Populate tab content
        if i == 1 then -- Scripts tab
            local scriptButtons = {
                {name = "Infinite Yield", url = "https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"},
                {name = "CMD X", url = "https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source"},
                {name = "Psycho Hub", url = "https://raw.githubusercontent.com/AlznX/Roblox-Scripts/refs/heads/main/Psycho%20Hub"},
                {name = "Nullware Script", url = "https://gist.githubusercontent.com/M6HqVBcddw2qaN4s/2d722888a388017c18028cd434c43a25/raw/dcccf1027fe4b90780e47767aaf584389c9d7771/EULma3fU90PUOKUn"}
            }
            
            for _, script in ipairs(scriptButtons) do
                Utils.CreateButton(scrollFrame, script.name, UDim2.new(1, 0, 0, 40), UDim2.new(0, 0, 0, 0), function()
                    pcall(function()
                        loadstring(game:HttpGet(script.url))()
                        Utils.ShowNotification("Loaded " .. script.name, "success")
                    end)
                end)
            end
            
        elseif i == 2 then -- Sword Tools tab
            local swordTools = {
                {name = "Sword Ring", func = "swordRing"},
                {name = "Sword Spin", func = "swordSpin"},
                {name = "Sword Wings", func = "swordWings"},
                {name = "Sword Box", func = "swordBox"},
                {name = "Sword Damage", func = "swordDamage"},
                {name = "Kill Aura", func = "killAura"}
            }
            
            for _, tool in ipairs(swordTools) do
                Utils.CreateButton(scrollFrame, tool.name, UDim2.new(1, 0, 0, 40), UDim2.new(0, 0, 0, 0), function()
                    SwordTools[tool.func]()
                    Utils.ShowNotification("Activated " .. tool.name, "success")
                end)
            end
            
        elseif i == 3 then -- Utilities tab
            local utilities = {
                {name = "Noclip Toggle", func = "toggleNoclip"},
                {name = "God Mode", func = "godMode"},
                {name = "Teleport to Spawn", func = "teleportSpawn"},
                {name = "Reset Character", func = "resetCharacter"}
            }
            
            for _, util in ipairs(utilities) do
                Utils.CreateButton(scrollFrame, util.name, UDim2.new(1, 0, 0, 40), UDim2.new(0, 0, 0, 0), function()
                    Utilities[util.func]()
                    Utils.ShowNotification("Executed " .. util.name, "info")
                end)
            end
            
        elseif i == 4 then -- Settings tab
            local settingsLabel = Instance.new("TextLabel")
            settingsLabel.Parent = scrollFrame
            settingsLabel.Size = UDim2.new(1, 0, 0, 100)
            settingsLabel.BackgroundTransparency = 1
            settingsLabel.Text = "Settings and configuration options will be added in future updates."
            settingsLabel.TextColor3 = CONFIG.THEME.TEXT_SECONDARY
            settingsLabel.TextScaled = true
            settingsLabel.Font = Enum.Font.Gotham
            settingsLabel.TextWrapped = true
        end
    end
    
    return screenGui
end

-- Sword Tools Module
SwordTools = {}

function SwordTools.getSwords()
    local swords = {}
    for _, tool in pairs(player.Backpack:GetChildren()) do
        if tool:IsA("Tool") then
            table.insert(swords, tool)
        end
    end
    for _, tool in pairs(player.Character:GetChildren()) do
        if tool:IsA("Tool") then
            table.insert(swords, tool)
        end
    end
    return swords
end

function SwordTools.swordRing()
    local swords = SwordTools.getSwords()
    local distance = 50
    local speed = 1
    local rotating = true
    
    for i, sword in pairs(swords) do
        sword.Parent = player.Backpack
        sword.Handle.Massless = true
        sword.Handle.CanCollide = false
        sword.Grip = CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
        local angle = (6.28 / #swords) * i
        sword.Grip = sword.Grip * CFrame.Angles(0, angle, 0) * CFrame.new(distance * math.sin(angle), 0, distance * math.cos(angle))
        sword.Parent = player.Character
    end
    
    local counter = 0
    local connection
    connection = RunService.RenderStepped:Connect(function()
        if rotating and player.Character then
            counter = counter + 0.001 * speed
            for i, sword in pairs(swords) do
                if sword.Parent then
                    sword.Parent = player.Backpack
                    sword.Handle.Massless = true
                    sword.Handle.CanCollide = false
                    sword.Grip = CFrame.new(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1)
                    local angle = ((6.28 / #swords) * i) + counter
                    sword.Grip = sword.Grip * CFrame.Angles(0, angle, 0) * CFrame.new(distance * math.sin(angle), 0, distance * math.cos(angle))
                    sword.Parent = player.Character
                end
            end
        else
            connection:Disconnect()
        end
    end)
end

function SwordTools.swordSpin()
    local swords = SwordTools.getSwords()
    
    local connection
    connection = RunService.Heartbeat:Connect(function()
        if player.Character then
            for i, sword in pairs(swords) do
                if sword.Parent then
                    sword.Parent = player.Backpack
                    sword.Handle.Massless = true
                    sword.Handle.CanCollide = false
                    sword.Grip = sword.Grip * CFrame.Angles(1.5, 0, 0) * CFrame.new(0, 0, 0.5 * (i - 1))
                    sword.Parent = player.Character
                end
            end
        else
            connection:Disconnect()
        end
        task.wait(0.1)
    end)
end

function SwordTools.swordWings()
    local swords = SwordTools.getSwords()
    local half = math.floor(#swords / 2)
    
    local function applyWingData(wingData)
        for i = 1, half do
            local sword = swords[i]
            if sword then
                sword.Parent = player.Backpack
                sword.Grip = CFrame.new(-3.5, 0, 0) * CFrame.Angles(3.14, 0, 0)
                sword.Grip = sword.Grip * CFrame.Angles(((wingData.angle / half) * i) + wingData.value, 1.57, 0)
                sword.Grip = sword.Grip * CFrame.new(1.7, 0, 0)
                sword.Parent = player.Character
            end
        end
        
        for i = half + 1, #swords do
            local sword = swords[i]
            if sword then
                sword.Parent = player.Backpack
                sword.Grip = CFrame.new(-3.5, 0, 0) * CFrame.Angles(3.14, 0, 0)
                sword.Grip = sword.Grip * CFrame.Angles(-(((wingData.angle / half) * (i - half)) + wingData.value), 1.57, 0)
                sword.Grip = sword.Grip * CFrame.new(1.7, 0, 0)
                sword.Parent = player.Character
            end
        end
    end
    
    applyWingData({angle = 0.5, value = 0.5})
end

function SwordTools.swordBox()
    local swords = SwordTools.getSwords()
    local quotient = math.floor(#swords / 6)
    local counter = 1
    
    for i = 1, 6 do
        local max = math.floor(#swords / 6 * i) + 1
        local min = math.floor(#swords / 6 * (i - 1))
        
        for x = 1, math.sqrt(quotient) do
            for y = 1, math.sqrt(quotient) do
                local sword = swords[counter]
                if sword then
                    sword.Parent = player.Backpack
                    sword.Grip = CFrame.new(0, 0, 0) * CFrame.Angles(0, 1.57, 0)
                    sword.Grip = sword.Grip * CFrame.new(x * 3.5, y * -3.5, 8.75) * CFrame.new(-8.75, 15, 0)
                    
                    if i == 2 then
                        sword.Grip = sword.Grip * CFrame.Angles(0, 1.57, 0)
                    elseif i == 3 then
                        sword.Grip = sword.Grip * CFrame.Angles(0, 3.14, 0)
                    elseif i == 4 then
                        sword.Grip = sword.Grip * CFrame.Angles(0, 3.14 + 1.57, 0)
                    elseif i == 5 then
                        sword.Grip = sword.Grip * CFrame.Angles(-1.57, 0, 0) * CFrame.new(-1.75, 0, -1)
                    elseif i == 6 then
                        sword.Grip = sword.Grip * CFrame.Angles(1.57, 0, 0) * CFrame.new(-1.75, 2, 1)
                    end
                    
                    sword.Grip = sword.Grip * CFrame.new(1.7, -6.8, -2.3)
                    sword.Parent = player.Character
                end
                counter = counter + 1
            end
        end
    end
end

function SwordTools.swordDamage()
    local swords = SwordTools.getSwords()
    
    for i, sword in pairs(swords) do
        if i ~= #swords then
            sword.Parent = player.Backpack
            sword.Handle.Massless = true
            sword.Grip = sword.Grip * CFrame.new(0, 0, 0) * CFrame.Angles(0, (6.28 / (#swords - 1)) * i, 0)
        end
        sword.Parent = player.Character
        
        if sword.Handle:FindFirstChild("dmg") and sword.Handle.dmg:FindFirstChild("RemoteEvent") then
            sword.Handle.Touched:Connect(function(hit)
                local humanoid = hit.Parent:FindFirstChild("Humanoid")
                if humanoid and hit.Parent.Name ~= player.Name then
                    sword.Handle.dmg.RemoteEvent:FireServer(humanoid, player.leaderstats.Power.Value)
                end
            end)
        end
    end
end

function SwordTools.killAura()
    local range = 33
    
    local connection
    connection = RunService.RenderStepped:Connect(function()
        if player.Character then
            for _, otherPlayer in pairs(Players:GetPlayers()) do
                if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("Humanoid") then
                    if otherPlayer.Character.Humanoid.Health > 0 and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        local distance = player:DistanceFromCharacter(otherPlayer.Character.HumanoidRootPart.Position)
                        if distance <= range then
                            local tool = player.Character:FindFirstChildOfClass("Tool")
                            if tool and tool:FindFirstChild("Handle") then
                                tool:Activate()
                                for _, part in pairs(otherPlayer.Character:GetChildren()) do
                                    if part:IsA("BasePart") then
                                        firetouchinterest(tool.Handle, part, 0)
                                        firetouchinterest(tool.Handle, part, 1)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        else
            connection:Disconnect()
        end
    end)
end

-- Utilities Module
Utilities = {}

local noclipEnabled = false

function Utilities.toggleNoclip()
    noclipEnabled = not noclipEnabled
    
    if noclipEnabled then
        local connection
        connection = RunService.Stepped:Connect(function()
            if player.Character and noclipEnabled then
                for _, part in pairs(player.Character:GetDescendants()) do
                    if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                        part.CanCollide = false
                    end
                end
            else
                connection:Disconnect()
            end
        end)
        Utils.ShowNotification("Noclip enabled", "success")
    else
        Utils.ShowNotification("Noclip disabled", "info")
    end
end

function Utilities.godMode()
    local sword = player.Backpack:FindFirstChild("sword") or player.Character:FindFirstChild("sword")
    if sword and sword.Handle:FindFirstChild("dmg") and sword.Handle.dmg:FindFirstChild("RemoteEvent") then
        sword.Handle.dmg.RemoteEvent:FireServer(player.Character.Humanoid, -math.huge)
        Utils.ShowNotification("God mode activated", "success")
    else
        Utils.ShowNotification("No sword found", "error")
    end
end

function Utilities.teleportSpawn()
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        player.Character.HumanoidRootPart.CFrame = CFrame.new(0, 50, 0)
        Utils.ShowNotification("Teleported to spawn", "success")
    end
end

function Utilities.resetCharacter()
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid.Health = 0
        Utils.ShowNotification("Character reset", "info")
    end
end

-- Initialize the hub
local function Initialize()
    spawn(function()
        CreateLoadingScreen()
        task.wait(5) -- Wait for loading screen to finish
        CreateMainHub()
        Utils.ShowNotification("Sword Simulator Hub loaded successfully!", "success")
    end)
end

-- Run the initialization
Initialize()
